trigger: none
pr: none

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

pool:
    name: rpi-cluster
    demands:
    - agent.name -equals pi4-rpios-1

strategy:
  matrix:
    'low_resources_profile':
      limits_cpu: "0.50"
      reservation_cpu: "0.25"
      limit_memory: "128M"
      reservation_memory: "256M"
    'medium_resources_profile':
      limits_cpu: "0.75"
      reservation_cpu: "0.50"
      limit_memory: "256M"
      reservation_memory: "512M"
    'high_resources_profile':
      limits_cpu: "1.00"
      reservation_cpu: "0.75"
      limit_memory: "1000M"
      reservation_memory: "512M"

steps:
  - checkout: self
  - bash: |
      echo "test"
    displayName: Change parameters in yamls
  - bash: |
      sudo docker stack up map-pacer --compose-file docker-swarm.yml
      sudo docker service update map-pacer_agent --image mactat/map-pacer-agent:arm-latest --force
      sudo docker service update map-pacer_map-service --image mactat/map-pacer-map-service:arm-latest --force
    displayName: "Deploy adjusted services mem: ${ reservation_memory } cpu: ${ reservation_cpu }"

  - task: Kubernetes@1
    displayName: Login to k8s cluster
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: 'okteto-cloud-connection'
      command: login
  - bash: |
      touch .env # For make
      mkdir cpu_$(reservation_cpu)_mem_$(reservation_memory)
      make performance SYSTEM_ID="on_prem" FLAGS="--json > cpu_$(reservation_cpu)_mem_$(reservation_memory)/res.json"
      cp cpu_$(reservation_cpu)_mem_$(reservation_memory)/res.json ./tools/res.json
      make plots RESULTS="res"
      cp ./tools/*.png ./cpu_$(reservation_cpu)_mem_$(reservation_memory)/
    displayName: "Performance test for mem: ${ reservation_memory } cpu: ${ reservation_cpu }"

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        cpu_$(reservation_cpu)_mem_$(reservation_memory)/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'res.json'
      publishLocation: 'pipeline'



